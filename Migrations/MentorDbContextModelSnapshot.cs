// <auto-generated />
using System;
using MentorShipProgram;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MentorShipProgram.Migrations
{
    [DbContext(typeof(MentorDbContext))]
    partial class MentorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MentorShipProgram.Models.Appointments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("MentorShipProgram.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentsId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.Property<int?>("MentorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentsId");

                    b.HasIndex("MentorId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MentorShipProgram.Models.Mentor", b =>
                {
                    b.Property<int>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MentorId"));

                    b.Property<int?>("AppointmentsId")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("MentorId");

                    b.HasIndex("AppointmentsId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("MentorShipProgram.Models.MentorCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentsId")
                        .HasColumnType("integer");

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("MentorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentsId");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("MentorId");

                    b.ToTable("MentorCategories");
                });

            modelBuilder.Entity("MentorShipProgram.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("MentorId")
                        .HasColumnType("integer");

                    b.Property<string>("UID")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("MentorId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MentorShipProgram.Models.Categories", b =>
                {
                    b.HasOne("MentorShipProgram.Models.Appointments", null)
                        .WithMany("Categories")
                        .HasForeignKey("AppointmentsId");

                    b.HasOne("MentorShipProgram.Models.Mentor", null)
                        .WithMany("Categories")
                        .HasForeignKey("MentorId");
                });

            modelBuilder.Entity("MentorShipProgram.Models.Mentor", b =>
                {
                    b.HasOne("MentorShipProgram.Models.Appointments", null)
                        .WithMany("Mentors")
                        .HasForeignKey("AppointmentsId");
                });

            modelBuilder.Entity("MentorShipProgram.Models.MentorCategories", b =>
                {
                    b.HasOne("MentorShipProgram.Models.Appointments", null)
                        .WithMany("MentorCategories")
                        .HasForeignKey("AppointmentsId");

                    b.HasOne("MentorShipProgram.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId");

                    b.HasOne("MentorShipProgram.Models.Mentor", "Mentor")
                        .WithMany("MentorCategories")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("MentorShipProgram.Models.User", b =>
                {
                    b.HasOne("MentorShipProgram.Models.Mentor", "Mentor")
                        .WithMany("Users")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("MentorShipProgram.Models.Appointments", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("MentorCategories");

                    b.Navigation("Mentors");
                });

            modelBuilder.Entity("MentorShipProgram.Models.Mentor", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("MentorCategories");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
